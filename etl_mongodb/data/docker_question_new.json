[
    {
        "QN": "1",
        "type": "mcq",
        "question": "What is Docker primarily used for?",
        "options": {
            "A": "Virtualization",
            "B": "Containerization",
            "C": "Networking",
            "D": "Data Storage"
        },
        "answer": "B",
        "explanation": "Docker is primarily used for containerization, which allows applications to be packaged with their dependencies and run consistently across different environments.",
        "topic": "Docker Basics"
    },
    {
        "QN": "2",
        "type": "mcq",
        "question": "Which component of Docker is responsible for building and managing Docker images?",
        "options": {
            "A": "Docker Daemon",
            "B": "Docker Client",
            "C": "Docker Hub",
            "D": "Docker Registry"
        },
        "answer": "A",
        "explanation": "The Docker Daemon (dockerd) is responsible for building, running, and managing Docker containers and images.",
        "topic": "Docker Architecture"
    },
    {
        "QN": "3",
        "type": "mcq",
        "question": "Which command is used to list all running Docker containers?",
        "options": {
            "A": "docker ps",
            "B": "docker ls",
            "C": "docker list",
            "D": "docker containers"
        },
        "answer": "A",
        "explanation": "The 'docker ps' command lists all running Docker containers. Adding the '-a' flag will show all containers, including stopped ones.",
        "topic": "Docker Commands"
    },
    {
        "QN": "4",
        "type": "mcq",
        "question": "What is the purpose of the 'docker pull' command?",
        "options": {
            "A": "To create a new container",
            "B": "To remove an image",
            "C": "To download an image from a registry",
            "D": "To start a container"
        },
        "answer": "C",
        "explanation": "The 'docker pull' command is used to download Docker images from a registry, such as Docker Hub.",
        "topic": "Image Management"
    },
    {
        "QN": "5",
        "type": "mcq",
        "question": "Which Docker network driver is used by default when creating a new network?",
        "options": {
            "A": "host",
            "B": "bridge",
            "C": "overlay",
            "D": "macvlan"
        },
        "answer": "B",
        "explanation": "The 'bridge' network driver is the default driver used when creating a new Docker network. It provides isolated network communication between containers on the same host.",
        "topic": "Networking"
    },
    {
        "QN": "6",
        "type": "mcq",
        "question": "Which tool is commonly used for orchestrating Docker containers in production environments?",
        "options": {
            "A": "Docker Compose",
            "B": "Kubernetes",
            "C": "Docker Swarm",
            "D": "Both B and C"
        },
        "answer": "D",
        "explanation": "Kubernetes and Docker Swarm are both widely used for orchestrating Docker containers in production environments. Docker Compose is more suited for local development.",
        "topic": "Orchestration"
    },
    {
        "QN": "7",
        "type": "mcq",
        "question": "Which command is used to remove a Docker container?",
        "options": {
            "A": "docker rm",
            "B": "docker delete",
            "C": "docker remove",
            "D": "docker kill"
        },
        "answer": "A",
        "explanation": "The 'docker rm' command is used to remove one or more Docker containers. The container must be stopped before it can be removed.",
        "topic": "Docker Commands"
    },
    {
        "QN": "8",
        "type": "mcq",
        "question": "What is a Docker image?",
        "options": {
            "A": "A running instance of a container",
            "B": "A template for creating containers",
            "C": "A network configuration for containers",
            "D": "A storage volume for containers"
        },
        "answer": "B",
        "explanation": "A Docker image is a read-only template that contains the instructions for creating a Docker container. It includes the application code, libraries, and dependencies.",
        "topic": "Image Management"
    },
    {
        "QN": "9",
        "type": "mcq",
        "question": "Which command is used to create a new Docker network?",
        "options": {
            "A": "docker network create",
            "B": "docker create network",
            "C": "docker net add",
            "D": "docker add network"
        },
        "answer": "A",
        "explanation": "The 'docker network create' command is used to create a new Docker network with a specified driver and configuration.",
        "topic": "Networking"
    },
    {
        "QN": "10",
        "type": "mcq",
        "question": "What is the purpose of Docker Compose?",
        "options": {
            "A": "To manage multiple containers in a single host",
            "B": "To orchestrate containers across multiple hosts",
            "C": "To monitor container performance",
            "D": "To create Docker images"
        },
        "answer": "A",
        "explanation": "Docker Compose is used to define and manage multi-container Docker applications on a single host. It uses a YAML file to configure the application's services, networks, and volumes.",
        "topic": "Orchestration"
    },
    {
        "QN": "11",
        "type": "mcq",
        "question": "What is Docker primarily used for?",
        "options": {
            "A": "Virtual Machine Management",
            "B": "Containerization",
            "C": "Operating System Development",
            "D": "Cloud Storage"
        },
        "answer": "B",
        "explanation": "Docker is a platform designed to develop, ship, and run applications inside lightweight, portable containers.",
        "topic": "Docker Basics"
    },
    {
        "QN": "12",
        "type": "mcq",
        "question": "Which component of Docker is responsible for running containers?",
        "options": {
            "A": "Docker CLI",
            "B": "Docker Engine",
            "C": "Docker Registry",
            "D": "Docker Compose"
        },
        "answer": "B",
        "explanation": "Docker Engine is the core component of Docker that runs and manages containers.",
        "topic": "Docker Architecture"
    },
    {
        "QN": "13",
        "type": "mcq",
        "question": "Which command is used to list all running containers?",
        "options": {
            "A": "docker ps -a",
            "B": "docker ls",
            "C": "docker ps",
            "D": "docker list"
        },
        "answer": "C",
        "explanation": "The 'docker ps' command lists all currently running containers. To list all containers (including stopped ones), 'docker ps -a' is used.",
        "topic": "Docker Commands"
    },
    {
        "QN": "14",
        "type": "mcq",
        "question": "Which command is used to download a Docker image from Docker Hub?",
        "options": {
            "A": "docker download",
            "B": "docker pull",
            "C": "docker fetch",
            "D": "docker clone"
        },
        "answer": "B",
        "explanation": "The 'docker pull' command is used to fetch images from a registry like Docker Hub.",
        "topic": "Image Management"
    },
    {
        "QN": "15",
        "type": "mcq",
        "question": "Which default network mode does Docker use when no specific network is mentioned?",
        "options": {
            "A": "host",
            "B": "bridge",
            "C": "none",
            "D": "overlay"
        },
        "answer": "B",
        "explanation": "By default, Docker uses the 'bridge' network mode, which allows containers to communicate while being isolated from the host system.",
        "topic": "Networking"
    },
    {
        "QN": "16",
        "type": "mcq",
        "question": "Which tool is used for orchestrating Docker containers at scale?",
        "options": {
            "A": "Docker Compose",
            "B": "Kubernetes",
            "C": "Docker Swarm",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker Compose is used for managing multi-container applications, Docker Swarm is Docker's native clustering tool, and Kubernetes is a widely used orchestration platform.",
        "topic": "Orchestration"
    },
    {
        "QN": "17",
        "type": "mcq",
        "question": "What command is used to build a Docker image from a Dockerfile?",
        "options": {
            "A": "docker build",
            "B": "docker create",
            "C": "docker run",
            "D": "docker compile"
        },
        "answer": "A",
        "explanation": "The 'docker build' command is used to create an image from a specified Dockerfile.",
        "topic": "Docker Basics"
    },
    {
        "QN": "18",
        "type": "mcq",
        "question": "Which of the following is NOT a part of Docker architecture?",
        "options": {
            "A": "Docker CLI",
            "B": "Docker Kernel",
            "C": "Docker Daemon",
            "D": "Docker Registry"
        },
        "answer": "B",
        "explanation": "Docker does not have a component called 'Docker Kernel'; it runs on the host operating system's kernel.",
        "topic": "Docker Architecture"
    },
    {
        "QN": "19",
        "type": "mcq",
        "question": "Which command is used to remove a Docker container?",
        "options": {
            "A": "docker delete",
            "B": "docker remove",
            "C": "docker rm",
            "D": "docker clean"
        },
        "answer": "C",
        "explanation": "The 'docker rm' command removes a container by specifying its container ID or name.",
        "topic": "Docker Commands"
    },
    {
        "QN": "20",
        "type": "mcq",
        "question": "What is the purpose of Docker volumes?",
        "options": {
            "A": "To store container logs",
            "B": "To persist data outside containers",
            "C": "To manage container networking",
            "D": "To create container images"
        },
        "answer": "B",
        "explanation": "Docker volumes are used to persist data outside containers, ensuring that data is not lost when a container is stopped or deleted.",
        "topic": "Docker Volumes"
    },
    {
        "QN": "21",
        "type": "mcq",
        "question": "Which of the following is a best practice for securing Docker containers?",
        "options": {
            "A": "Run containers as the root user",
            "B": "Use the latest version of Docker",
            "C": "Disable container isolation",
            "D": "Share Docker daemon sockets with containers"
        },
        "answer": "B",
        "explanation": "Using the latest version of Docker ensures that you have the most recent security patches and features, reducing the risk of vulnerabilities.",
        "topic": "Docker Security"
    },
    {
        "QN": "22",
        "type": "mcq",
        "question": "What is the purpose of the 'FROM' instruction in a Dockerfile?",
        "options": {
            "A": "To define the base image",
            "B": "To copy files into the image",
            "C": "To set environment variables",
            "D": "To expose ports"
        },
        "answer": "A",
        "explanation": "The 'FROM' instruction in a Dockerfile specifies the base image from which the new image will be built.",
        "topic": "Dockerfile"
    },
    {
        "QN": "23",
        "type": "mcq",
        "question": "What is Docker Hub?",
        "options": {
            "A": "A container orchestration tool",
            "B": "A cloud-based registry for Docker images",
            "C": "A network driver for Docker",
            "D": "A monitoring tool for Docker containers"
        },
        "answer": "B",
        "explanation": "Docker Hub is a cloud-based registry service that allows you to store, share, and manage Docker images.",
        "topic": "Docker Hub"
    },
    {
        "QN": "24",
        "type": "mcq",
        "question": "Which Docker network driver is used for multi-host networking?",
        "options": {
            "A": "bridge",
            "B": "host",
            "C": "overlay",
            "D": "macvlan"
        },
        "answer": "C",
        "explanation": "The 'overlay' network driver is used for multi-host networking, enabling containers on different Docker hosts to communicate securely.",
        "topic": "Advanced Networking"
    },
    {
        "QN": "25",
        "type": "mcq",
        "question": "Which command is used to create a Docker volume?",
        "options": {
            "A": "docker volume create",
            "B": "docker create volume",
            "C": "docker volume add",
            "D": "docker add volume"
        },
        "answer": "A",
        "explanation": "The 'docker volume create' command is used to create a new Docker volume.",
        "topic": "Docker Volumes"
    },
    {
        "QN": "26",
        "type": "mcq",
        "question": "What is the purpose of Docker Content Trust (DCT)?",
        "options": {
            "A": "To encrypt container data",
            "B": "To verify the authenticity of Docker images",
            "C": "To monitor container performance",
            "D": "To manage Docker networks"
        },
        "answer": "B",
        "explanation": "Docker Content Trust (DCT) ensures the authenticity and integrity of Docker images by verifying their digital signatures.",
        "topic": "Docker Security"
    },
    {
        "QN": "27",
        "type": "mcq",
        "question": "Which instruction in a Dockerfile is used to set environment variables?",
        "options": {
            "A": "ENV",
            "B": "ARG",
            "C": "SET",
            "D": "EXPOSE"
        },
        "answer": "A",
        "explanation": "The 'ENV' instruction in a Dockerfile is used to set environment variables that will be available during the build process and in the running container.",
        "topic": "Dockerfile"
    },
    {
        "QN": "28",
        "type": "mcq",
        "question": "Which command is used to push a Docker image to Docker Hub?",
        "options": {
            "A": "docker push",
            "B": "docker upload",
            "C": "docker publish",
            "D": "docker deploy"
        },
        "answer": "A",
        "explanation": "The 'docker push' command is used to upload a Docker image to a registry, such as Docker Hub.",
        "topic": "Docker Hub"
    },
    {
        "QN": "29",
        "type": "mcq",
        "question": "What is the purpose of the 'macvlan' network driver in Docker?",
        "options": {
            "A": "To provide isolated network communication between containers",
            "B": "To assign a MAC address to a container",
            "C": "To enable multi-host networking",
            "D": "To manage container storage"
        },
        "answer": "B",
        "explanation": "The 'macvlan' network driver assigns a MAC address to a container, making it appear as a physical device on the network.",
        "topic": "Advanced Networking"
    },
    {
        "QN": "30",
        "type": "mcq",
        "question": "Which command is used to create a Docker volume?",
        "options": {
            "A": "docker volume create",
            "B": "docker volume new",
            "C": "docker volume add",
            "D": "docker create volume"
        },
        "answer": "A",
        "explanation": "The 'docker volume create' command is used to create a named volume that persists data across container restarts.",
        "topic": "Docker Volumes"
    },
    {
        "QN": "31",
        "type": "mcq",
        "question": "Which security feature helps prevent privilege escalation within a Docker container?",
        "options": {
            "A": "Running as root",
            "B": "Using user namespaces",
            "C": "Disabling SELinux",
            "D": "Granting full host access"
        },
        "answer": "B",
        "explanation": "User namespaces allow containers to run processes as non-root users, reducing security risks.",
        "topic": "Docker Security"
    },
    {
        "QN": "32",
        "type": "mcq",
        "question": "Which instruction in a Dockerfile is used to specify the base image?",
        "options": {
            "A": "RUN",
            "B": "FROM",
            "C": "CMD",
            "D": "ENTRYPOINT"
        },
        "answer": "B",
        "explanation": "The 'FROM' instruction in a Dockerfile specifies the base image upon which the new image is built.",
        "topic": "Dockerfile"
    },
    {
        "QN": "33",
        "type": "mcq",
        "question": "Which Docker network driver is best suited for communication between containers on different hosts?",
        "options": {
            "A": "bridge",
            "B": "overlay",
            "C": "host",
            "D": "none"
        },
        "answer": "B",
        "explanation": "The overlay network driver allows containers running on different Docker hosts to communicate as if they were on the same network.",
        "topic": "Advanced Networking"
    },
    {
        "QN": "34",
        "type": "mcq",
        "question": "What is Docker Swarm?",
        "options": {
            "A": "A container orchestration tool",
            "B": "A network driver for Docker",
            "C": "A storage volume manager",
            "D": "A monitoring tool for Docker containers"
        },
        "answer": "A",
        "explanation": "Docker Swarm is a container orchestration tool that allows you to manage multiple Docker containers as a cluster.",
        "topic": "Docker Swarm"
    },
    {
        "QN": "35",
        "type": "mcq",
        "question": "Which command is used to initialize a Docker Swarm?",
        "options": {
            "A": "docker swarm init",
            "B": "docker init swarm",
            "C": "docker swarm create",
            "D": "docker create swarm"
        },
        "answer": "A",
        "explanation": "The 'docker swarm init' command is used to initialize a Docker Swarm and make the current node a manager.",
        "topic": "Docker Swarm"
    },
    {
        "QN": "36",
        "type": "mcq",
        "question": "What is a 'service' in Docker Swarm?",
        "options": {
            "A": "A running container",
            "B": "A task definition for containers",
            "C": "A group of tasks that define the state of a container",
            "D": "A network configuration for containers"
        },
        "answer": "C",
        "explanation": "In Docker Swarm, a service is a group of tasks that define the desired state of a container, such as the number of replicas and the image to use.",
        "topic": "Docker Swarm"
    },
    {
        "QN": "37",
        "type": "mcq",
        "question": "What is the Docker Engine API used for?",
        "options": {
            "A": "To manage Docker containers programmatically",
            "B": "To create Docker images",
            "C": "To monitor Docker Hub",
            "D": "To configure Docker networks"
        },
        "answer": "A",
        "explanation": "The Docker Engine API allows you to interact with Docker programmatically, enabling you to manage containers, images, networks, and more.",
        "topic": "Docker APIs"
    },
    {
        "QN": "38",
        "type": "mcq",
        "question": "Which command is used to stop a running Docker container?",
        "options": {
            "A": "docker stop",
            "B": "docker kill",
            "C": "docker pause",
            "D": "docker halt"
        },
        "answer": "A",
        "explanation": "The 'docker stop' command gracefully stops a running container by sending a SIGTERM signal, followed by a SIGKILL if the container does not stop.",
        "topic": "Container Lifecycle"
    },
    {
        "QN": "39",
        "type": "mcq",
        "question": "What is the difference between 'docker stop' and 'docker kill'?",
        "options": {
            "A": "'docker stop' forcefully stops the container, while 'docker kill' gracefully stops it",
            "B": "'docker stop' gracefully stops the container, while 'docker kill' forcefully stops it",
            "C": "Both commands do the same thing",
            "D": "'docker stop' removes the container, while 'docker kill' stops it"
        },
        "answer": "B",
        "explanation": "'docker stop' sends a SIGTERM signal to gracefully stop the container, while 'docker kill' sends a SIGKILL signal to forcefully stop it.",
        "topic": "Container Lifecycle"
    },
    {
        "QN": "40",
        "type": "mcq",
        "question": "Which instruction in a Dockerfile is used to copy files from the host to the image?",
        "options": {
            "A": "COPY",
            "B": "ADD",
            "C": "INSERT",
            "D": "Both A and B"
        },
        "answer": "D",
        "explanation": "Both 'COPY' and 'ADD' instructions in a Dockerfile can be used to copy files from the host to the image. However, 'ADD' has additional features like URL support and automatic extraction of tar files.",
        "topic": "Dockerfile"
    },
    {
        "QN": "41",
        "type": "mcq",
        "question": "What is the purpose of the 'EXPOSE' instruction in a Dockerfile?",
        "options": {
            "A": "To define the base image",
            "B": "To set environment variables",
            "C": "To expose a port for the container",
            "D": "To copy files into the image"
        },
        "answer": "C",
        "explanation": "The 'EXPOSE' instruction in a Dockerfile is used to inform Docker that the container listens on the specified network ports at runtime.",
        "topic": "Dockerfile"
    },
    {
        "QN": "42",
        "type": "mcq",
        "question": "Which command is used to list all Docker volumes?",
        "options": {
            "A": "docker volume ls",
            "B": "docker list volumes",
            "C": "docker volumes",
            "D": "docker volume list"
        },
        "answer": "A",
        "explanation": "The 'docker volume ls' command lists all Docker volumes on the host.",
        "topic": "Docker Volumes"
    },
    {
        "QN": "43",
        "type": "mcq",
        "question": "What is the purpose of Docker Secrets?",
        "options": {
            "A": "To encrypt container data",
            "B": "To securely manage sensitive information",
            "C": "To monitor container performance",
            "D": "To manage Docker networks"
        },
        "answer": "B",
        "explanation": "Docker Secrets is used to securely manage sensitive information, such as passwords and API keys, in Docker Swarm.",
        "topic": "Docker Security"
    },
    {
        "QN": "44",
        "type": "mcq",
        "question": "Which command is used to start services defined in a Docker Compose file?",
        "options": {
            "A": "docker-compose up",
            "B": "docker start",
            "C": "docker-compose run",
            "D": "docker-compose start"
        },
        "answer": "A",
        "explanation": "The 'docker-compose up' command starts the services defined in a Docker Compose file.",
        "topic": "Docker Compose"
    },
    {
        "QN": "45",
        "type": "mcq",
        "question": "Which command is used to view logs of a running container?",
        "options": {
            "A": "docker logs <container_id>",
            "B": "docker show logs",
            "C": "docker container logs",
            "D": "docker view logs"
        },
        "answer": "A",
        "explanation": "The 'docker logs <container_id>' command is used to view the logs generated by a running container.",
        "topic": "Docker Logs"
    },
    {
        "QN": "46",
        "type": "mcq",
        "question": "Which command is used to create a new Docker network?",
        "options": {
            "A": "docker network create <network_name>",
            "B": "docker new network",
            "C": "docker network new <network_name>",
            "D": "docker create network"
        },
        "answer": "A",
        "explanation": "The 'docker network create <network_name>' command is used to create a new Docker network.",
        "topic": "Docker Networking"
    },
    {
        "QN": "47",
        "type": "mcq",
        "question": "Which command is used to push an image to Docker Hub?",
        "options": {
            "A": "docker push <image_name>",
            "B": "docker upload <image_name>",
            "C": "docker deploy <image_name>",
            "D": "docker publish <image_name>"
        },
        "answer": "A",
        "explanation": "The 'docker push <image_name>' command is used to upload an image to a Docker registry such as Docker Hub.",
        "topic": "Docker Registry"
    },
    {
        "QN": "48",
        "type": "mcq",
        "question": "Which file format is used for Docker Compose configuration?",
        "options": {
            "A": "JSON",
            "B": "YAML",
            "C": "XML",
            "D": "TOML"
        },
        "answer": "B",
        "explanation": "Docker Compose uses YAML (Yet Another Markup Language) for its configuration files, typically named 'docker-compose.yml'.",
        "topic": "Docker Compose"
    },
    {
        "QN": "49",
        "type": "mcq",
        "question": "Which command is used to start all services defined in a Docker Compose file?",
        "options": {
            "A": "docker-compose start",
            "B": "docker-compose up",
            "C": "docker-compose run",
            "D": "docker-compose build"
        },
        "answer": "B",
        "explanation": "The 'docker-compose up' command is used to start all services defined in a Docker Compose file. It builds, (re)creates, starts, and attaches to containers for a service.",
        "topic": "Docker Compose"
    },
    {
        "QN": "50",
        "type": "mcq",
        "question": "Which command is used to view the logs of a Docker container?",
        "options": {
            "A": "docker logs",
            "B": "docker view logs",
            "C": "docker container logs",
            "D": "docker show logs"
        },
        "answer": "A",
        "explanation": "The 'docker logs' command is used to view the logs of a Docker container. You can specify the container name or ID to view its logs.",
        "topic": "Container Logging"
    },
    {
        "QN": "51",
        "type": "mcq",
        "question": "Which logging driver is used by default in Docker?",
        "options": {
            "A": "json-file",
            "B": "syslog",
            "C": "journald",
            "D": "fluentd"
        },
        "answer": "A",
        "explanation": "The 'json-file' logging driver is used by default in Docker. It writes log messages in JSON format to files on the host.",
        "topic": "Container Logging"
    },
    {
        "QN": "52",
        "type": "mcq",
        "question": "What is the role of Docker in CI/CD pipelines?",
        "options": {
            "A": "To provide a consistent environment for building and testing applications",
            "B": "To manage cloud infrastructure",
            "C": "To monitor application performance",
            "D": "To store application data"
        },
        "answer": "A",
        "explanation": "Docker provides a consistent environment for building, testing, and deploying applications in CI/CD pipelines, ensuring that applications run the same way in development, testing, and production.",
        "topic": "Docker in CI/CD"
    },
    {
        "QN": "53",
        "type": "mcq",
        "question": "Which tool is commonly used with Docker for CI/CD automation?",
        "options": {
            "A": "Jenkins",
            "B": "GitLab CI",
            "C": "Travis CI",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Jenkins, GitLab CI, and Travis CI are commonly used tools for CI/CD automation, and they all integrate well with Docker for building and deploying containerized applications.",
        "topic": "Docker in CI/CD"
    },
    {
        "QN": "54",
        "type": "mcq",
        "question": "How does Docker support microservices architecture?",
        "options": {
            "A": "By providing isolated environments for each service",
            "B": "By enabling easy scaling of individual services",
            "C": "By simplifying service deployment and management",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports microservices architecture by providing isolated environments for each service, enabling easy scaling of individual services, and simplifying service deployment and management.",
        "topic": "Microservices Architecture"
    },
    {
        "QN": "55",
        "type": "mcq",
        "question": "Which Docker feature is particularly useful for microservices?",
        "options": {
            "A": "Docker Compose",
            "B": "Docker Swarm",
            "C": "Docker Networking",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker Compose, Docker Swarm, and Docker Networking are all useful features for microservices, as they help manage multi-container applications, orchestrate services, and enable communication between services.",
        "topic": "Microservices Architecture"
    },
    {
        "QN": "56",
        "type": "mcq",
        "question": "What is the purpose of Docker plugins?",
        "options": {
            "A": "To extend Docker's functionality",
            "B": "To manage Docker images",
            "C": "To monitor Docker containers",
            "D": "To create Docker networks"
        },
        "answer": "A",
        "explanation": "Docker plugins are used to extend Docker's functionality, such as adding support for new storage drivers, network drivers, or logging mechanisms.",
        "topic": "Docker Plugins"
    },
    {
        "QN": "57",
        "type": "mcq",
        "question": "Which storage driver is recommended for production environments?",
        "options": {
            "A": "aufs",
            "B": "overlay2",
            "C": "devicemapper",
            "D": "vfs"
        },
        "answer": "B",
        "explanation": "The 'overlay2' storage driver is recommended for production environments due to its performance and stability. It is the default driver for most Linux distributions.",
        "topic": "Docker Storage Drivers"
    },
    {
        "QN": "58",
        "type": "mcq",
        "question": "What is the purpose of Docker storage drivers?",
        "options": {
            "A": "To manage container networking",
            "B": "To manage how images and containers are stored on the host",
            "C": "To manage container logging",
            "D": "To manage container security"
        },
        "answer": "B",
        "explanation": "Docker storage drivers manage how images and containers are stored on the host filesystem, including layering and copy-on-write mechanisms.",
        "topic": "Docker Storage Drivers"
    },
    {
        "QN": "59",
        "type": "mcq",
        "question": "Which of the following is a best practice for securing Docker containers?",
        "options": {
            "A": "Run containers as the root user",
            "B": "Use read-only filesystems for containers",
            "C": "Disable container isolation",
            "D": "Share Docker daemon sockets with containers"
        },
        "answer": "B",
        "explanation": "Using read-only filesystems for containers reduces the risk of malicious modifications to the container's filesystem.",
        "topic": "Container Security"
    },
    {
        "QN": "60",
        "type": "mcq",
        "question": "What is the purpose of Docker Bench for Security?",
        "options": {
            "A": "To monitor container performance",
            "B": "To scan Docker images for vulnerabilities",
            "C": "To check Docker configurations against security best practices",
            "D": "To manage Docker networks"
        },
        "answer": "C",
        "explanation": "Docker Bench for Security is a script that checks Docker configurations against security best practices, helping to ensure a secure Docker environment.",
        "topic": "Container Security"
    },
    {
        "QN": "61",
        "type": "mcq",
        "question": "Which operating system is required to run Docker Desktop on Windows?",
        "options": {
            "A": "Windows 7",
            "B": "Windows 10 Pro or Enterprise",
            "C": "Windows Server 2016",
            "D": "Windows XP"
        },
        "answer": "B",
        "explanation": "Docker Desktop on Windows requires Windows 10 Pro or Enterprise (64-bit) with Hyper-V enabled.",
        "topic": "Docker for Windows"
    },
    {
        "QN": "62",
        "type": "mcq",
        "question": "What is the purpose of Linux containers on Windows (LCOW)?",
        "options": {
            "A": "To run Linux containers natively on Windows",
            "B": "To run Windows containers on Linux",
            "C": "To manage Docker networks",
            "D": "To monitor container performance"
        },
        "answer": "A",
        "explanation": "Linux containers on Windows (LCOW) allow you to run Linux containers natively on Windows without requiring a separate Linux VM.",
        "topic": "Docker for Windows"
    },
    {
        "QN": "63",
        "type": "mcq",
        "question": "How does Docker support edge computing?",
        "options": {
            "A": "By providing lightweight containers for resource-constrained environments",
            "B": "By enabling centralized management of edge devices",
            "C": "By providing real-time monitoring of edge devices",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports edge computing by providing lightweight containers for resource-constrained environments, enabling centralized management of edge devices, and offering tools for real-time monitoring.",
        "topic": "Edge Computing"
    },
    {
        "QN": "64",
        "type": "mcq",
        "question": "Which Docker tool is commonly used for managing edge deployments?",
        "options": {
            "A": "Docker Swarm",
            "B": "Docker Compose",
            "C": "Docker Edge",
            "D": "Docker Hub"
        },
        "answer": "A",
        "explanation": "Docker Swarm is commonly used for managing edge deployments due to its simplicity and ability to orchestrate containers across distributed environments.",
        "topic": "Edge Computing"
    },
    {
        "QN": "65",
        "type": "mcq",
        "question": "What is the purpose of Docker Volume Plugins?",
        "options": {
            "A": "To extend Docker's networking capabilities",
            "B": "To enable integration with external storage systems",
            "C": "To monitor container performance",
            "D": "To manage container security"
        },
        "answer": "B",
        "explanation": "Docker Volume Plugins enable integration with external storage systems, allowing Docker to use third-party storage solutions for persistent data.",
        "topic": "Docker Plugins"
    },
    {
        "QN": "66",
        "type": "mcq",
        "question": "Which of the following is a popular Docker network plugin?",
        "options": {
            "A": "Weave Net",
            "B": "Fluentd",
            "C": "Prometheus",
            "D": "ELK Stack"
        },
        "answer": "A",
        "explanation": "Weave Net is a popular Docker network plugin that provides a simple and scalable way to connect containers across multiple hosts.",
        "topic": "Docker Plugins"
    },
    {
        "QN": "67",
        "type": "mcq",
        "question": "How can Docker be used in serverless architectures?",
        "options": {
            "A": "By packaging functions as containers",
            "B": "By managing virtual machines",
            "C": "By providing a centralized logging system",
            "D": "By orchestrating microservices"
        },
        "answer": "A",
        "explanation": "Docker can be used in serverless architectures by packaging functions as containers, which can then be deployed and scaled independently.",
        "topic": "Serverless Architectures"
    },
    {
        "QN": "68",
        "type": "mcq",
        "question": "Which tool integrates Docker with serverless frameworks?",
        "options": {
            "A": "Kubernetes",
            "B": "AWS Lambda",
            "C": "OpenFaaS",
            "D": "Docker Swarm"
        },
        "answer": "C",
        "explanation": "OpenFaaS (Open Function as a Service) integrates Docker with serverless frameworks, allowing you to run functions as Docker containers.",
        "topic": "Serverless Architectures"
    },
    {
        "QN": "69",
        "type": "mcq",
        "question": "How does Docker simplify multi-cloud deployments?",
        "options": {
            "A": "By providing a consistent runtime environment across clouds",
            "B": "By managing cloud infrastructure",
            "C": "By monitoring cloud performance",
            "D": "By storing data across multiple clouds"
        },
        "answer": "A",
        "explanation": "Docker simplifies multi-cloud deployments by providing a consistent runtime environment across different cloud providers, ensuring that applications run the same way everywhere.",
        "topic": "Multi-Cloud Deployments"
    },
    {
        "QN": "70",
        "type": "mcq",
        "question": "Which Docker feature is particularly useful for multi-cloud deployments?",
        "options": {
            "A": "Docker Compose",
            "B": "Docker Swarm",
            "C": "Docker Hub",
            "D": "Docker Volumes"
        },
        "answer": "B",
        "explanation": "Docker Swarm is particularly useful for multi-cloud deployments as it allows you to orchestrate containers across multiple cloud environments.",
        "topic": "Multi-Cloud Deployments"
    },
    {
        "QN": "71",
        "type": "mcq",
        "question": "What is the purpose of Docker Desktop for Mac?",
        "options": {
            "A": "To run Windows containers on Mac",
            "B": "To provide a native Docker experience on macOS",
            "C": "To manage Docker Hub",
            "D": "To monitor Docker containers"
        },
        "answer": "B",
        "explanation": "Docker Desktop for Mac provides a native Docker experience on macOS, allowing you to build, ship, and run containers seamlessly.",
        "topic": "Docker for Mac"
    },
    {
        "QN": "72",
        "type": "mcq",
        "question": "Which virtualization technology does Docker Desktop for Mac use?",
        "options": {
            "A": "Hyper-V",
            "B": "VirtualBox",
            "C": "HyperKit",
            "D": "VMware"
        },
        "answer": "C",
        "explanation": "Docker Desktop for Mac uses HyperKit, a lightweight macOS virtualization technology, to run Docker containers.",
        "topic": "Docker for Mac"
    },
    {
        "QN": "73",
        "type": "mcq",
        "question": "What is the purpose of multi-stage builds in Docker?",
        "options": {
            "A": "To reduce the size of Docker images",
            "B": "To increase the number of layers in an image",
            "C": "To improve container performance",
            "D": "To manage Docker networks"
        },
        "answer": "A",
        "explanation": "Multi-stage builds in Docker allow you to reduce the size of Docker images by using intermediate images for building and copying only the necessary files to the final image.",
        "topic": "Container Image Optimization"
    },
    {
        "QN": "74",
        "type": "mcq",
        "question": "Which Dockerfile instruction is used to minimize the number of layers in an image?",
        "options": {
            "A": "RUN",
            "B": "COPY",
            "C": "ADD",
            "D": "CHAIN"
        },
        "answer": "A",
        "explanation": "The 'RUN' instruction can be used to chain multiple commands together, minimizing the number of layers in a Docker image and reducing its size.",
        "topic": "Container Image Optimization"
    },
    {
        "QN": "75",
        "type": "mcq",
        "question": "How does Docker support IoT deployments?",
        "options": {
            "A": "By providing lightweight containers for resource-constrained devices",
            "B": "By managing IoT networks",
            "C": "By monitoring IoT devices",
            "D": "By storing IoT data"
        },
        "answer": "A",
        "explanation": "Docker supports IoT deployments by providing lightweight containers that can run on resource-constrained devices, enabling consistent application deployment across IoT environments.",
        "topic": "IoT (Internet of Things)"
    },
    {
        "QN": "76",
        "type": "mcq",
        "question": "Which Docker tool is commonly used for managing IoT edge devices?",
        "options": {
            "A": "Docker Swarm",
            "B": "Docker Compose",
            "C": "Docker Edge",
            "D": "Docker Hub"
        },
        "answer": "A",
        "explanation": "Docker Swarm is commonly used for managing IoT edge devices due to its simplicity and ability to orchestrate containers across distributed environments.",
        "topic": "IoT (Internet of Things)"
    },
    {
        "QN": "77",
        "type": "mcq",
        "question": "How does Docker support AI/ML workloads?",
        "options": {
            "A": "By providing isolated environments for training and inference",
            "B": "By managing GPU resources",
            "C": "By simplifying the deployment of ML models",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports AI/ML workloads by providing isolated environments for training and inference, managing GPU resources, and simplifying the deployment of machine learning models.",
        "topic": "AI/ML Workloads"
    },
    {
        "QN": "78",
        "type": "mcq",
        "question": "Which Docker feature is particularly useful for GPU-accelerated AI/ML workloads?",
        "options": {
            "A": "Docker Compose",
            "B": "NVIDIA Docker",
            "C": "Docker Swarm",
            "D": "Docker Hub"
        },
        "answer": "B",
        "explanation": "NVIDIA Docker (now part of Docker's native GPU support) is particularly useful for GPU-accelerated AI/ML workloads, as it allows containers to access GPU resources.",
        "topic": "AI/ML Workloads"
    },
    {
        "QN": "79",
        "type": "mcq",
        "question": "How does Docker simplify hybrid cloud deployments?",
        "options": {
            "A": "By providing a consistent runtime environment across on-premises and cloud infrastructure",
            "B": "By managing cloud infrastructure",
            "C": "By monitoring cloud performance",
            "D": "By storing data across multiple clouds"
        },
        "answer": "A",
        "explanation": "Docker simplifies hybrid cloud deployments by providing a consistent runtime environment across on-premises and cloud infrastructure, ensuring that applications run the same way everywhere.",
        "topic": "Hybrid Cloud Environments"
    },
    {
        "QN": "80",
        "type": "mcq",
        "question": "Which Docker tool is commonly used for hybrid cloud orchestration?",
        "options": {
            "A": "Docker Swarm",
            "B": "Kubernetes",
            "C": "Docker Compose",
            "D": "Docker Hub"
        },
        "answer": "B",
        "explanation": "Kubernetes is commonly used for hybrid cloud orchestration, as it can manage containers across on-premises and cloud environments seamlessly.",
        "topic": "Hybrid Cloud Environments"
    },
    {
        "QN": "81",
        "type": "mcq",
        "question": "What is the purpose of Docker for ARM?",
        "options": {
            "A": "To run Docker containers on ARM-based devices",
            "B": "To manage Docker networks",
            "C": "To monitor container performance",
            "D": "To store Docker images"
        },
        "answer": "A",
        "explanation": "Docker for ARM allows you to run Docker containers on ARM-based devices, such as Raspberry Pi and other IoT devices.",
        "topic": "Docker for ARM Architectures"
    },
    {
        "QN": "82",
        "type": "mcq",
        "question": "Which command is used to build Docker images for ARM architectures?",
        "options": {
            "A": "docker build",
            "B": "docker buildx",
            "C": "docker arm-build",
            "D": "docker create"
        },
        "answer": "B",
        "explanation": "The 'docker buildx' command is used to build Docker images for multiple architectures, including ARM, using cross-compilation.",
        "topic": "Docker for ARM Architectures"
    },
    {
        "QN": "83",
        "type": "mcq",
        "question": "What is the purpose of Docker Security Scanning?",
        "options": {
            "A": "To monitor container performance",
            "B": "To scan Docker images for vulnerabilities",
            "C": "To manage Docker networks",
            "D": "To optimize Docker images"
        },
        "answer": "B",
        "explanation": "Docker Security Scanning (now part of Docker Hub) scans Docker images for vulnerabilities, ensuring that they are safe to use in production.",
        "topic": "Container Security Scanning"
    },
    {
        "QN": "84",
        "type": "mcq",
        "question": "Which tool is commonly used for scanning Docker images for vulnerabilities?",
        "options": {
            "A": "Clair",
            "B": "Prometheus",
            "C": "Fluentd",
            "D": "ELK Stack"
        },
        "answer": "A",
        "explanation": "Clair is a popular open-source tool for scanning Docker images for vulnerabilities, often integrated with Docker registries.",
        "topic": "Container Security Scanning"
    },
    {
        "QN": "85",
        "type": "mcq",
        "question": "How does Docker support big data pipelines?",
        "options": {
            "A": "By providing isolated environments for data processing",
            "B": "By simplifying the deployment of big data tools",
            "C": "By enabling scalability and resource management",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports big data pipelines by providing isolated environments for data processing, simplifying the deployment of big data tools, and enabling scalability and resource management.",
        "topic": "Big Data Pipelines"
    },
    {
        "QN": "86",
        "type": "mcq",
        "question": "Which Docker feature is particularly useful for big data workloads?",
        "options": {
            "A": "Docker Compose",
            "B": "Docker Swarm",
            "C": "Docker Volumes",
            "D": "Docker Hub"
        },
        "answer": "C",
        "explanation": "Docker Volumes are particularly useful for big data workloads, as they allow persistent storage for large datasets and intermediate results.",
        "topic": "Big Data Pipelines"
    },
    {
        "QN": "87",
        "type": "mcq",
        "question": "How does Docker support real-time analytics?",
        "options": {
            "A": "By providing isolated environments for data processing",
            "B": "By enabling scalability and resource management",
            "C": "By simplifying the deployment of real-time analytics tools",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports real-time analytics by providing isolated environments for data processing, enabling scalability and resource management, and simplifying the deployment of real-time analytics tools.",
        "topic": "Real-Time Analytics"
    },
    {
        "QN": "88",
        "type": "mcq",
        "question": "Which Docker feature is particularly useful for real-time analytics workloads?",
        "options": {
            "A": "Docker Compose",
            "B": "Docker Swarm",
            "C": "Docker Volumes",
            "D": "Docker Hub"
        },
        "answer": "C",
        "explanation": "Docker Volumes are particularly useful for real-time analytics workloads, as they allow persistent storage for large datasets and intermediate results.",
        "topic": "Real-Time Analytics"
    },
    {
        "QN": "89",
        "type": "mcq",
        "question": "How does Docker support blockchain applications?",
        "options": {
            "A": "By providing isolated environments for blockchain nodes",
            "B": "By simplifying the deployment of blockchain networks",
            "C": "By enabling scalability and resource management",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports blockchain applications by providing isolated environments for blockchain nodes, simplifying the deployment of blockchain networks, and enabling scalability and resource management.",
        "topic": "Blockchain Applications"
    },
    {
        "QN": "90",
        "type": "mcq",
        "question": "Which Docker tool is commonly used for managing blockchain networks?",
        "options": {
            "A": "Docker Compose",
            "B": "Docker Swarm",
            "C": "Kubernetes",
            "D": "Docker Hub"
        },
        "answer": "A",
        "explanation": "Docker Compose is commonly used for managing blockchain networks, as it allows you to define and run multi-container Docker applications.",
        "topic": "Blockchain Applications"
    },
    {
        "QN": "91",
        "type": "mcq",
        "question": "What is the purpose of Docker for Windows Server?",
        "options": {
            "A": "To run Linux containers on Windows Server",
            "B": "To provide a native Docker experience on Windows Server",
            "C": "To manage Docker Hub",
            "D": "To monitor Docker containers"
        },
        "answer": "B",
        "explanation": "Docker for Windows Server provides a native Docker experience on Windows Server, allowing you to build, ship, and run containers seamlessly.",
        "topic": "Docker for Windows Server"
    },
    {
        "QN": "92",
        "type": "mcq",
        "question": "Which virtualization technology does Docker for Windows Server use?",
        "options": {
            "A": "Hyper-V",
            "B": "VirtualBox",
            "C": "HyperKit",
            "D": "VMware"
        },
        "answer": "A",
        "explanation": "Docker for Windows Server uses Hyper-V, a native Windows virtualization technology, to run Docker containers.",
        "topic": "Docker for Windows Server"
    },
    {
        "QN": "93",
        "type": "mcq",
        "question": "Which command is used to enable Docker Content Trust?",
        "options": {
            "A": "docker trust enable",
            "B": "export DOCKER_CONTENT_TRUST=1",
            "C": "docker content-trust on",
            "D": "docker enable trust"
        },
        "answer": "B",
        "explanation": "The command 'export DOCKER_CONTENT_TRUST=1' is used to enable Docker Content Trust, ensuring that only signed images are used.",
        "topic": "Container Image Signing"
    },
    {
        "QN": "94",
        "type": "mcq",
        "question": "How does Docker support serverless AI/ML workloads?",
        "options": {
            "A": "By packaging AI/ML models as containers",
            "B": "By managing GPU resources",
            "C": "By simplifying the deployment of serverless functions",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports serverless AI/ML workloads by packaging AI/ML models as containers, managing GPU resources, and simplifying the deployment of serverless functions.",
        "topic": "Serverless AI/ML"
    },
    {
        "QN": "95",
        "type": "mcq",
        "question": "Which tool integrates Docker with serverless AI/ML frameworks?",
        "options": {
            "A": "Kubernetes",
            "B": "AWS Lambda",
            "C": "OpenFaaS",
            "D": "Docker Swarm"
        },
        "answer": "C",
        "explanation": "OpenFaaS (Open Function as a Service) integrates Docker with serverless AI/ML frameworks, allowing you to run functions as Docker containers.",
        "topic": "Serverless AI/ML"
    },
    {
        "QN": "96",
        "type": "mcq",
        "question": "How does Docker support multi-tenant environments?",
        "options": {
            "A": "By providing isolated environments for each tenant",
            "B": "By enabling resource sharing and isolation",
            "C": "By simplifying tenant management",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports multi-tenant environments by providing isolated environments for each tenant, enabling resource sharing and isolation, and simplifying tenant management.",
        "topic": "Multi-Tenant Environments"
    },
    {
        "QN": "97",
        "type": "mcq",
        "question": "Which Docker feature is particularly useful for multi-tenant environments?",
        "options": {
            "A": "Docker Compose",
            "B": "Docker Swarm",
            "C": "Docker Namespaces",
            "D": "Docker Hub"
        },
        "answer": "C",
        "explanation": "Docker Namespaces are particularly useful for multi-tenant environments, as they provide isolation between tenants' containers.",
        "topic": "Multi-Tenant Environments"
    },
    {
        "QN": "98",
        "type": "mcq",
        "question": "How does Docker support edge computing for IoT?",
        "options": {
            "A": "By providing lightweight containers for resource-constrained devices",
            "B": "By enabling centralized management of edge devices",
            "C": "By providing real-time monitoring of edge devices",
            "D": "All of the above"
        },
        "answer": "D",
        "explanation": "Docker supports edge computing for IoT by providing lightweight containers for resource-constrained devices, enabling centralized management of edge devices, and offering tools for real-time monitoring.",
        "topic": "Edge Computing for IoT"
    },
    {
        "QN": "99",
        "type": "mcq",
        "question": "What is the purpose of Docker for ARM-based servers?",
        "options": {
            "A": "To run Docker containers on ARM-based servers",
            "B": "To manage Docker networks",
            "C": "To monitor container performance",
            "D": "To store Docker images"
        },
        "answer": "A",
        "explanation": "Docker for ARM-based servers allows you to run Docker containers on ARM-based servers, which are often used in edge computing and IoT scenarios.",
        "topic": "Docker for ARM-Based Servers"
    },
    {
        "QN": "100",
        "type": "mcq",
        "question": "Which command is used to build Docker images for ARM-based servers?",
        "options": {
            "A": "docker build",
            "B": "docker buildx",
            "C": "docker arm-build",
            "D": "docker create"
        },
        "answer": "B",
        "explanation": "The 'docker buildx' command is used to build Docker images for multiple architectures, including ARM, using cross-compilation.",
        "topic": "Docker for ARM-Based Servers"
    },
    {
        "QN": "101",
        "type": "mcq",
        "question": "What is the purpose of container runtime security?",
        "options": {
            "A": "To monitor container performance",
            "B": "To protect containers from runtime threats",
            "C": "To manage Docker networks",
            "D": "To optimize Docker images"
        },
        "answer": "B",
        "explanation": "Container runtime security focuses on protecting containers from runtime threats, such as malicious processes or unauthorized access.",
        "topic": "Container Runtime Security"
    },
    {
        "QN": "102",
        "type": "mcq",
        "question": "Which tool is commonly used for container runtime security?",
        "options": {
            "A": "Clair",
            "B": "Falco",
            "C": "Prometheus",
            "D": "ELK Stack"
        },
        "answer": "B",
        "explanation": "Falco is a popular open-source tool for container runtime security, providing real-time threat detection and alerting.",
        "topic": "Container Runtime Security"
    },
    {
        "QN": "103",
        "type": "mcq",
        "question": "Which command is used to build a Docker image from a Dockerfile?",
        "options": {
            "A": "docker create",
            "B": "docker build",
            "C": "docker run",
            "D": "docker start"
        },
        "answer": "B",
        "explanation": "The 'docker build' command is used to build a Docker image from a Dockerfile. For example: 'docker build -t myimage .'",
        "topic": "Docker Commands"
    },
    {
        "QN": "104",
        "type": "mcq",
        "question": "Which command is used to start a stopped container?",
        "options": {
            "A": "docker run",
            "B": "docker start",
            "C": "docker restart",
            "D": "docker create"
        },
        "answer": "B",
        "explanation": "The 'docker start' command is used to start a stopped container. For example: 'docker start mycontainer'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "105",
        "type": "mcq",
        "question": "Which command is used to remove all stopped containers?",
        "options": {
            "A": "docker rm",
            "B": "docker prune",
            "C": "docker rm -f",
            "D": "docker container prune"
        },
        "answer": "D",
        "explanation": "The 'docker container prune' command removes all stopped containers. For example: 'docker container prune'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "106",
        "type": "mcq",
        "question": "Which command is used to view the logs of a running container?",
        "options": {
            "A": "docker logs",
            "B": "docker view logs",
            "C": "docker inspect",
            "D": "docker show logs"
        },
        "answer": "A",
        "explanation": "The 'docker logs' command is used to view the logs of a running container. For example: 'docker logs mycontainer'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "107",
        "type": "mcq",
        "question": "Which command is used to execute a command inside a running container?",
        "options": {
            "A": "docker exec",
            "B": "docker run",
            "C": "docker attach",
            "D": "docker start"
        },
        "answer": "A",
        "explanation": "The 'docker exec' command is used to execute a command inside a running container. For example: 'docker exec -it mycontainer bash'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "108",
        "type": "mcq",
        "question": "Which command is used to list all Docker images on the host?",
        "options": {
            "A": "docker images",
            "B": "docker list images",
            "C": "docker image ls",
            "D": "Both A and C"
        },
        "answer": "D",
        "explanation": "Both 'docker images' and 'docker image ls' are used to list all Docker images on the host.",
        "topic": "Docker Commands"
    },
    {
        "QN": "109",
        "type": "mcq",
        "question": "Which command is used to remove a Docker image?",
        "options": {
            "A": "docker rmi",
            "B": "docker remove",
            "C": "docker delete",
            "D": "docker image rm"
        },
        "answer": "A",
        "explanation": "The 'docker rmi' command is used to remove a Docker image. For example: 'docker rmi myimage'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "110",
        "type": "mcq",
        "question": "Which command is used to inspect the details of a Docker container?",
        "options": {
            "A": "docker inspect",
            "B": "docker details",
            "C": "docker info",
            "D": "docker show"
        },
        "answer": "A",
        "explanation": "The 'docker inspect' command is used to inspect the details of a Docker container, image, or network. For example: 'docker inspect mycontainer'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "111",
        "type": "mcq",
        "question": "Which command is used to rename a Docker container?",
        "options": {
            "A": "docker rename",
            "B": "docker mv",
            "C": "docker update",
            "D": "docker modify"
        },
        "answer": "A",
        "explanation": "The 'docker rename' command is used to rename a Docker container. For example: 'docker rename oldname newname'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "112",
        "type": "mcq",
        "question": "Which command is used to pause a running container?",
        "options": {
            "A": "docker stop",
            "B": "docker pause",
            "C": "docker halt",
            "D": "docker freeze"
        },
        "answer": "B",
        "explanation": "The 'docker pause' command is used to pause a running container. For example: 'docker pause mycontainer'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "113",
        "type": "mcq",
        "question": "Which command is used to unpause a paused container?",
        "options": {
            "A": "docker unpause",
            "B": "docker resume",
            "C": "docker start",
            "D": "docker continue"
        },
        "answer": "A",
        "explanation": "The 'docker unpause' command is used to unpause a paused container. For example: 'docker unpause mycontainer'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "114",
        "type": "mcq",
        "question": "Which command is used to list all Docker networks?",
        "options": {
            "A": "docker network ls",
            "B": "docker list networks",
            "C": "docker networks",
            "D": "docker net ls"
        },
        "answer": "A",
        "explanation": "The 'docker network ls' command is used to list all Docker networks.",
        "topic": "Docker Commands"
    },
    {
        "QN": "115",
        "type": "mcq",
        "question": "Which command is used to remove a Docker network?",
        "options": {
            "A": "docker network rm",
            "B": "docker remove network",
            "C": "docker delete network",
            "D": "docker net rm"
        },
        "answer": "A",
        "explanation": "The 'docker network rm' command is used to remove a Docker network. For example: 'docker network rm mynetwork'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "116",
        "type": "mcq",
        "question": "Which command is used to connect a container to a Docker network?",
        "options": {
            "A": "docker network connect",
            "B": "docker connect",
            "C": "docker attach",
            "D": "docker join"
        },
        "answer": "A",
        "explanation": "The 'docker network connect' command is used to connect a container to a Docker network. For example: 'docker network connect mynetwork mycontainer'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "117",
        "type": "mcq",
        "question": "Which command is used to disconnect a container from a Docker network?",
        "options": {
            "A": "docker network disconnect",
            "B": "docker disconnect",
            "C": "docker detach",
            "D": "docker leave"
        },
        "answer": "A",
        "explanation": "The 'docker network disconnect' command is used to disconnect a container from a Docker network. For example: 'docker network disconnect mynetwork mycontainer'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "118",
        "type": "mcq",
        "question": "Which command is used to list all Docker volumes?",
        "options": {
            "A": "docker volume ls",
            "B": "docker list volumes",
            "C": "docker volumes",
            "D": "docker vol ls"
        },
        "answer": "A",
        "explanation": "The 'docker volume ls' command is used to list all Docker volumes.",
        "topic": "Docker Commands"
    },
    {
        "QN": "119",
        "type": "mcq",
        "question": "Which command is used to remove a Docker volume?",
        "options": {
            "A": "docker volume rm",
            "B": "docker remove volume",
            "C": "docker delete volume",
            "D": "docker vol rm"
        },
        "answer": "A",
        "explanation": "The 'docker volume rm' command is used to remove a Docker volume. For example: 'docker volume rm myvolume'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "120",
        "type": "mcq",
        "question": "Which command is used to display Docker system-wide information?",
        "options": {
            "A": "docker info",
            "B": "docker system info",
            "C": "docker inspect",
            "D": "docker details"
        },
        "answer": "A",
        "explanation": "The 'docker info' command is used to display Docker system-wide information, such as the number of containers, images, and storage drivers.",
        "topic": "Docker Commands"
    },
    {
        "QN": "121",
        "type": "mcq",
        "question": "Which command is used to clean up unused Docker objects (images, containers, volumes, and networks)?",
        "options": {
            "A": "docker clean",
            "B": "docker system prune",
            "C": "docker remove unused",
            "D": "docker gc"
        },
        "answer": "B",
        "explanation": "The 'docker system prune' command is used to clean up unused Docker objects, such as images, containers, volumes, and networks.",
        "topic": "Docker Commands"
    },
    {
        "QN": "122",
        "type": "mcq",
        "question": "Which command is used to update the configuration of a running container?",
        "options": {
            "A": "docker update",
            "B": "docker modify",
            "C": "docker reconfigure",
            "D": "docker commit"
        },
        "answer": "A",
        "explanation": "The 'docker update' command is used to update the configuration of a running container, such as CPU or memory limits. For example: 'docker update --memory 512m mycontainer'.",
        "topic": "Docker Commands"
    },
    {
        "QN": "123",
        "type": "mcq",
        "question": "Which command is used to join a worker node to a Docker Swarm?",
        "options": {
            "A": "docker swarm join",
            "B": "docker join swarm",
            "C": "docker node join",
            "D": "docker swarm add"
        },
        "answer": "A",
        "explanation": "The 'docker swarm join' command is used to join a worker node to a Docker Swarm. A token provided by the manager is required.",
        "topic": "Docker Swarm"
    },
    {
        "QN": "124",
        "type": "mcq",
        "question": "Which command is used to list all nodes in a Docker Swarm?",
        "options": {
            "A": "docker node ls",
            "B": "docker swarm nodes",
            "C": "docker list nodes",
            "D": "docker nodes"
        },
        "answer": "A",
        "explanation": "The 'docker node ls' command lists all nodes in a Docker Swarm, including managers and workers.",
        "topic": "Docker Swarm"
    },
    {
        "QN": "125",
        "type": "mcq",
        "question": "Which command is used to create a service in Docker Swarm?",
        "options": {
            "A": "docker service create",
            "B": "docker create service",
            "C": "docker swarm service",
            "D": "docker add service"
        },
        "answer": "A",
        "explanation": "The 'docker service create' command is used to create a service in Docker Swarm. For example: 'docker service create --name myservice nginx'.",
        "topic": "Docker Swarm"
    },
    {
        "QN": "126",
        "type": "mcq",
        "question": "Which command is used to scale a Docker Swarm service?",
        "options": {
            "A": "docker service scale",
            "B": "docker scale service",
            "C": "docker swarm scale",
            "D": "docker update service"
        },
        "answer": "A",
        "explanation": "The 'docker service scale' command is used to scale a Docker Swarm service. For example: 'docker service scale myservice=5'.",
        "topic": "Docker Swarm"
    },
    {
        "QN": "127",
        "type": "mcq",
        "question": "Which command is used to stop all services defined in a Docker Compose file?",
        "options": {
            "A": "docker-compose stop",
            "B": "docker-compose down",
            "C": "docker-compose halt",
            "D": "docker-compose kill"
        },
        "answer": "B",
        "explanation": "The 'docker-compose down' command is used to stop and remove all services, networks, and volumes defined in a Docker Compose file.",
        "topic": "Docker Compose"
    },
    {
        "QN": "128",
        "type": "mcq",
        "question": "Which command is used to view the logs of all services in a Docker Compose file?",
        "options": {
            "A": "docker-compose logs",
            "B": "docker-compose view logs",
            "C": "docker-compose show logs",
            "D": "docker-compose inspect"
        },
        "answer": "A",
        "explanation": "The 'docker-compose logs' command is used to view the logs of all services defined in a Docker Compose file.",
        "topic": "Docker Compose"
    },
    {
        "QN": "129",
        "type": "mcq",
        "question": "Which command is used to log in to Docker Hub?",
        "options": {
            "A": "docker login",
            "B": "docker hub login",
            "C": "docker signin",
            "D": "docker connect"
        },
        "answer": "A",
        "explanation": "The 'docker login' command is used to log in to Docker Hub. For example: 'docker login'.",
        "topic": "Docker Hub"
    },
    {
        "QN": "130",
        "type": "mcq",
        "question": "Which command is used to build Docker images for multiple architectures?",
        "options": {
            "A": "docker build",
            "B": "docker buildx",
            "C": "docker multi-build",
            "D": "docker arch-build"
        },
        "answer": "B",
        "explanation": "The 'docker buildx' command is used to build Docker images for multiple architectures, such as ARM and x86.",
        "topic": "Multi-Architecture Builds"
    },
    {
        "QN": "131",
        "type": "mcq",
        "question": "Which command is used to create a new builder instance for multi-architecture builds?",
        "options": {
            "A": "docker buildx create",
            "B": "docker create builder",
            "C": "docker builder create",
            "D": "docker buildx init"
        },
        "answer": "A",
        "explanation": "The 'docker buildx create' command is used to create a new builder instance for multi-architecture builds.",
        "topic": "Multi-Architecture Builds"
    },
    {
        "QN": "132",
        "type": "mcq",
        "question": "Which Dockerfile instruction is used to define a health check for a container?",
        "options": {
            "A": "HEALTHCHECK",
            "B": "CHECK",
            "C": "HEALTH",
            "D": "MONITOR"
        },
        "answer": "A",
        "explanation": "The 'HEALTHCHECK' instruction in a Dockerfile is used to define a health check for a container.",
        "topic": "Container Health Checks"
    },
    {
        "QN": "133",
        "type": "mcq",
        "question": "Which command is used to view the health status of a container?",
        "options": {
            "A": "docker inspect",
            "B": "docker health",
            "C": "docker status",
            "D": "docker check"
        },
        "answer": "A",
        "explanation": "The 'docker inspect' command is used to view the health status of a container. For example: 'docker inspect --format='{{.State.Health.Status}}' mycontainer'.",
        "topic": "Container Health Checks"
    },
    {
        "QN": "134",
        "type": "mcq",
        "question": "Which command is used to list all installed Docker plugins?",
        "options": {
            "A": "docker plugin ls",
            "B": "docker list plugins",
            "C": "docker plugins",
            "D": "docker plugin list"
        },
        "answer": "A",
        "explanation": "The 'docker plugin ls' command is used to list all installed Docker plugins.",
        "topic": "Docker Plugins"
    },
    {
        "QN": "135",
        "type": "mcq",
        "question": "Which command is used to enable a Docker plugin?",
        "options": {
            "A": "docker plugin enable",
            "B": "docker enable plugin",
            "C": "docker plugin activate",
            "D": "docker activate plugin"
        },
        "answer": "A",
        "explanation": "The 'docker plugin enable' command is used to enable a Docker plugin. For example: 'docker plugin enable myplugin'.",
        "topic": "Docker Plugins"
    },
    {
        "QN": "136",
        "type": "mcq",
        "question": "Which command is used to install a Docker plugin?",
        "options": {
            "A": "docker plugin install",
            "B": "docker install plugin",
            "C": "docker plugin add",
            "D": "docker add plugin"
        },
        "answer": "A",
        "explanation": "The 'docker plugin install' command is used to install a Docker plugin. For example: 'docker plugin install myplugin'.",
        "topic": "Docker Plugins"
    },
    {
        "QN": "137",
        "type": "mcq",
        "question": "Which command is used to remove a Docker plugin?",
        "options": {
            "A": "docker plugin rm",
            "B": "docker remove plugin",
            "C": "docker plugin delete",
            "D": "docker delete plugin"
        },
        "answer": "A",
        "explanation": "The 'docker plugin rm' command is used to remove a Docker plugin. For example: 'docker plugin rm myplugin'.",
        "topic": "Docker Plugins"
    },
    {
        "QN": "138",
        "type": "mcq",
        "question": "Which command is used to build images for services defined in a Docker Compose file?",
        "options": {
            "A": "docker-compose build",
            "B": "docker-compose create",
            "C": "docker-compose up",
            "D": "docker-compose start"
        },
        "answer": "A",
        "explanation": "The 'docker-compose build' command is used to build images for services defined in a Docker Compose file.",
        "topic": "Docker Compose"
    },
    {
        "QN": "139",
        "type": "mcq",
        "question": "Which command is used to view the status of services defined in a Docker Compose file?",
        "options": {
            "A": "docker-compose ps",
            "B": "docker-compose status",
            "C": "docker-compose ls",
            "D": "docker-compose inspect"
        },
        "answer": "A",
        "explanation": "The 'docker-compose ps' command is used to view the status of services defined in a Docker Compose file.",
        "topic": "Docker Compose"
    },
    {
        "QN": "140",
        "type": "mcq",
        "question": "Which command is used to display the version of Docker installed on the system?",
        "options": {
            "A": "docker version",
            "B": "docker --version",
            "C": "docker info",
            "D": "docker check"
        },
        "answer": "B",
        "explanation": "The 'docker --version' command displays the version of Docker installed on the system, including the client and server versions.",
        "topic": "Docker Basics"
    },
    {
        "QN": "141",
        "type": "mcq",
        "question": "Which command is used to display detailed information about Docker's system-wide configuration?",
        "options": {
            "A": "docker info",
            "B": "docker system info",
            "C": "docker inspect",
            "D": "docker details"
        },
        "answer": "A",
        "explanation": "The 'docker info' command displays detailed information about Docker's system-wide configuration, such as the number of containers, images, and storage drivers.",
        "topic": "Docker Basics"
    },
    {
        "QN": "142",
        "type": "mcq",
        "question": "Which command is used to create a new container without starting it?",
        "options": {
            "A": "docker create",
            "B": "docker run",
            "C": "docker start",
            "D": "docker build"
        },
        "answer": "A",
        "explanation": "The 'docker create' command is used to create a new container without starting it. For example: 'docker create --name mycontainer nginx'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "143",
        "type": "mcq",
        "question": "Which command is used to attach to a running container's terminal?",
        "options": {
            "A": "docker attach",
            "B": "docker exec",
            "C": "docker run",
            "D": "docker start"
        },
        "answer": "A",
        "explanation": "The 'docker attach' command is used to attach to a running container's terminal. For example: 'docker attach mycontainer'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "144",
        "type": "mcq",
        "question": "Which command is used to copy files between a container and the host?",
        "options": {
            "A": "docker cp",
            "B": "docker copy",
            "C": "docker move",
            "D": "docker transfer"
        },
        "answer": "A",
        "explanation": "The 'docker cp' command is used to copy files between a container and the host. For example: 'docker cp mycontainer:/file.txt /host/path'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "145",
        "type": "mcq",
        "question": "Which command is used to display the processes running inside a container?",
        "options": {
            "A": "docker top",
            "B": "docker ps",
            "C": "docker inspect",
            "D": "docker processes"
        },
        "answer": "A",
        "explanation": "The 'docker top' command is used to display the processes running inside a container. For example: 'docker top mycontainer'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "146",
        "type": "mcq",
        "question": "Which command is used to display the resource usage statistics of a container?",
        "options": {
            "A": "docker stats",
            "B": "docker usage",
            "C": "docker monitor",
            "D": "docker inspect"
        },
        "answer": "A",
        "explanation": "The 'docker stats' command is used to display the resource usage statistics of a container, such as CPU, memory, and network usage.",
        "topic": "Docker Basics"
    },
    {
        "QN": "147",
        "type": "mcq",
        "question": "Which command is used to display the history of a Docker image?",
        "options": {
            "A": "docker history",
            "B": "docker inspect",
            "C": "docker image history",
            "D": "docker show history"
        },
        "answer": "A",
        "explanation": "The 'docker history' command is used to display the history of a Docker image, including the layers and commands used to build it.",
        "topic": "Docker Basics"
    },
    {
        "QN": "148",
        "type": "mcq",
        "question": "Which command is used to tag a Docker image?",
        "options": {
            "A": "docker tag",
            "B": "docker image tag",
            "C": "docker label",
            "D": "docker name"
        },
        "answer": "A",
        "explanation": "The 'docker tag' command is used to tag a Docker image. For example: 'docker tag myimage myrepo/myimage:1.0'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "149",
        "type": "mcq",
        "question": "Which command is used to save a Docker image to a tar archive?",
        "options": {
            "A": "docker save",
            "B": "docker export",
            "C": "docker archive",
            "D": "docker compress"
        },
        "answer": "A",
        "explanation": "The 'docker save' command is used to save a Docker image to a tar archive. For example: 'docker save -o myimage.tar myimage'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "150",
        "type": "mcq",
        "question": "Which command is used to load a Docker image from a tar archive?",
        "options": {
            "A": "docker load",
            "B": "docker import",
            "C": "docker extract",
            "D": "docker uncompress"
        },
        "answer": "A",
        "explanation": "The 'docker load' command is used to load a Docker image from a tar archive. For example: 'docker load -i myimage.tar'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "151",
        "type": "mcq",
        "question": "Which command is used to export a container's filesystem as a tar archive?",
        "options": {
            "A": "docker export",
            "B": "docker save",
            "C": "docker archive",
            "D": "docker compress"
        },
        "answer": "A",
        "explanation": "The 'docker export' command is used to export a container's filesystem as a tar archive. For example: 'docker export -o mycontainer.tar mycontainer'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "152",
        "type": "mcq",
        "question": "Which command is used to import a container's filesystem from a tar archive?",
        "options": {
            "A": "docker import",
            "B": "docker load",
            "C": "docker extract",
            "D": "docker uncompress"
        },
        "answer": "A",
        "explanation": "The 'docker import' command is used to import a container's filesystem from a tar archive. For example: 'docker import mycontainer.tar myimage'.",
        "topic": "Docker Basics"
    },
    {
        "QN": "153",
        "type": "mcq",
        "question": "Which command is used to list all Docker contexts?",
        "options": {
            "A": "docker context ls",
            "B": "docker list contexts",
            "C": "docker contexts",
            "D": "docker context list"
        },
        "answer": "A",
        "explanation": "The 'docker context ls' command is used to list all Docker contexts.",
        "topic": "Docker Contexts"
    },
    {
        "QN": "154",
        "type": "mcq",
        "question": "Which command is used to switch between Docker contexts?",
        "options": {
            "A": "docker context use",
            "B": "docker use context",
            "C": "docker switch context",
            "D": "docker context switch"
        },
        "answer": "A",
        "explanation": "The 'docker context use' command is used to switch between Docker contexts. For example: 'docker context use mycontext'.",
        "topic": "Docker Contexts"
    },
    {
        "QN": "155",
        "type": "mcq",
        "question": "Which command is used to create a Docker secret?",
        "options": {
            "A": "docker secret create",
            "B": "docker create secret",
            "C": "docker add secret",
            "D": "docker secret add"
        },
        "answer": "A",
        "explanation": "The 'docker secret create' command is used to create a Docker secret. For example: 'docker secret create mysecret secret.txt'.",
        "topic": "Docker Secrets"
    },
    {
        "QN": "156",
        "type": "mcq",
        "question": "Which command is used to restart a running container?",
        "options": {
            "A": "docker restart",
            "B": "docker start",
            "C": "docker stop",
            "D": "docker run"
        },
        "answer": "A",
        "explanation": "The 'docker restart' command is used to restart a running container. For example: 'docker restart mycontainer'.",
        "topic": "Container Management"
    },
    {
        "QN": "157",
        "type": "mcq",
        "question": "Which command is used to force-stop a running container?",
        "options": {
            "A": "docker stop",
            "B": "docker kill",
            "C": "docker pause",
            "D": "docker halt"
        },
        "answer": "B",
        "explanation": "The 'docker kill' command is used to force-stop a running container by sending a SIGKILL signal. For example: 'docker kill mycontainer'.",
        "topic": "Container Management"
    },
    {
        "QN": "158",
        "type": "mcq",
        "question": "Which command is used to execute a command in a running container in interactive mode?",
        "options": {
            "A": "docker exec -it",
            "B": "docker run -it",
            "C": "docker attach",
            "D": "docker start -it"
        },
        "answer": "A",
        "explanation": "The 'docker exec -it' command is used to execute a command in a running container in interactive mode. For example: 'docker exec -it mycontainer bash'.",
        "topic": "Container Management"
    },
    {
        "QN": "159",
        "type": "mcq",
        "question": "Which command is used to remove all unused Docker images?",
        "options": {
            "A": "docker rmi",
            "B": "docker image prune",
            "C": "docker rm",
            "D": "docker prune"
        },
        "answer": "B",
        "explanation": "The 'docker image prune' command is used to remove all unused Docker images. For example: 'docker image prune -a'.",
        "topic": "Image Management"
    },
    {
        "QN": "160",
        "type": "mcq",
        "question": "Which command is used to inspect the details of a Docker image?",
        "options": {
            "A": "docker inspect",
            "B": "docker details",
            "C": "docker info",
            "D": "docker show"
        },
        "answer": "A",
        "explanation": "The 'docker inspect' command is used to inspect the details of a Docker image. For example: 'docker inspect myimage'.",
        "topic": "Image Management"
    },
    {
        "QN": "161",
        "type": "mcq",
        "question": "Which command is used to pull a Docker image from a registry?",
        "options": {
            "A": "docker pull",
            "B": "docker fetch",
            "C": "docker download",
            "D": "docker get"
        },
        "answer": "A",
        "explanation": "The 'docker pull' command is used to pull a Docker image from a registry. For example: 'docker pull nginx'.",
        "topic": "Image Management"
    },
    {
        "QN": "162",
        "type": "mcq",
        "question": "Which command is used to inspect the details of a Docker network?",
        "options": {
            "A": "docker inspect",
            "B": "docker network inspect",
            "C": "docker details",
            "D": "docker show"
        },
        "answer": "B",
        "explanation": "The 'docker network inspect' command is used to inspect the details of a Docker network. For example: 'docker network inspect mynetwork'.",
        "topic": "Network Management"
    },
    {
        "QN": "163",
        "type": "mcq",
        "question": "Which command is used to create a new Docker volume?",
        "options": {
            "A": "docker volume create",
            "B": "docker create volume",
            "C": "docker volume add",
            "D": "docker add volume"
        },
        "answer": "A",
        "explanation": "The 'docker volume create' command is used to create a new Docker volume. For example: 'docker volume create myvolume'.",
        "topic": "Volume Management"
    },
    {
        "QN": "164",
        "type": "mcq",
        "question": "Which command is used to inspect the details of a Docker volume?",
        "options": {
            "A": "docker inspect",
            "B": "docker volume inspect",
            "C": "docker details",
            "D": "docker show"
        },
        "answer": "B",
        "explanation": "The 'docker volume inspect' command is used to inspect the details of a Docker volume. For example: 'docker volume inspect myvolume'.",
        "topic": "Volume Management"
    },
    {
        "QN": "165",
        "type": "mcq",
        "question": "Which command is used to display the Docker version?",
        "options": {
            "A": "docker version",
            "B": "docker --version",
            "C": "docker check",
            "D": "docker inspect"
        },
        "answer": "B",
        "explanation": "The 'docker --version' command is used to display the Docker version, including the client and server versions.",
        "topic": "System Management"
    },
    {
        "QN": "166",
        "type": "mcq",
        "question": "Which command is used to display the events generated by Docker?",
        "options": {
            "A": "docker events",
            "B": "docker logs",
            "C": "docker inspect",
            "D": "docker monitor"
        },
        "answer": "A",
        "explanation": "The 'docker events' command is used to display the events generated by Docker, such as container creation, start, stop, and deletion.",
        "topic": "System Management"
    },
    {
        "QN": "167",
        "type": "mcq",
        "question": "Which command is used to display the resource usage statistics of all running containers?",
        "options": {
            "A": "docker stats",
            "B": "docker usage",
            "C": "docker monitor",
            "D": "docker inspect"
        },
        "answer": "A",
        "explanation": "The 'docker stats' command is used to display the resource usage statistics of all running containers, such as CPU, memory, and network usage.",
        "topic": "Container Management"
    },
    {
        "QN": "168",
        "type": "mcq",
        "question": "Which command is used to display the logs of a container in real-time?",
        "options": {
            "A": "docker logs -f",
            "B": "docker logs --tail",
            "C": "docker logs --follow",
            "D": "Both A and C"
        },
        "answer": "D",
        "explanation": "The 'docker logs -f' or 'docker logs --follow' command is used to display the logs of a container in real-time. For example: 'docker logs -f mycontainer'.",
        "topic": "Container Management"
    },
    {
        "QN": "169",
        "type": "mcq",
        "question": "Which command is used to display the last 10 lines of a container's logs?",
        "options": {
            "A": "docker logs --tail 10",
            "B": "docker logs -n 10",
            "C": "docker logs --lines 10",
            "D": "docker logs --last 10"
        },
        "answer": "A",
        "explanation": "The 'docker logs --tail 10' command is used to display the last 10 lines of a container's logs. For example: 'docker logs --tail 10 mycontainer'.",
        "topic": "Container Management"
    },
    {
        "QN": "170",
        "type": "mcq",
        "question": "Which command is used to build a Docker image with a specific tag?",
        "options": {
            "A": "docker build -t",
            "B": "docker build --tag",
            "C": "docker build --name",
            "D": "Both A and B"
        },
        "answer": "D",
        "explanation": "The 'docker build -t' or 'docker build --tag' command is used to build a Docker image with a specific tag. For example: 'docker build -t myimage:1.0 .'.",
        "topic": "Image Management"
    },
    {
        "QN": "171",
        "type": "mcq",
        "question": "Which command is used to remove all Docker images?",
        "options": {
            "A": "docker rmi $(docker images -q)",
            "B": "docker image prune -a",
            "C": "docker rm $(docker images -q)",
            "D": "docker delete all"
        },
        "answer": "A",
        "explanation": "The 'docker rmi $(docker images -q)' command is used to remove all Docker images. The 'docker images -q' command lists all image IDs.",
        "topic": "Image Management"
    },
    {
        "QN": "172",
        "type": "mcq",
        "question": "Which command is used to tag a Docker image with a new name?",
        "options": {
            "A": "docker tag",
            "B": "docker image tag",
            "C": "docker label",
            "D": "docker name"
        },
        "answer": "A",
        "explanation": "The 'docker tag' command is used to tag a Docker image with a new name. For example: 'docker tag myimage myrepo/myimage:1.0'.",
        "topic": "Image Management"
    },
    {
        "QN": "173",
        "type": "mcq",
        "question": "Which command is used to display the disk usage of Docker objects?",
        "options": {
            "A": "docker system df",
            "B": "docker disk usage",
            "C": "docker inspect",
            "D": "docker stats"
        },
        "answer": "A",
        "explanation": "The 'docker system df' command is used to display the disk usage of Docker objects, such as images, containers, volumes, and build cache.",
        "topic": "System Management"
    },
    {
        "QN": "174",
        "type": "Docker Basics",
        "question": "What is Docker?",
        "options": {
            "A": "A Hypervisor",
            "B": "An Operating System",
            "C": "A Virtual Machine",
            "D": "A Containerization platform"
        },
        "answer": "D",
        "explanation": "Docker is a containerization platform that allows developers to package, ship, and run applications in containers."
    },
    {
        "QN": "175",
        "type": "Docker Architecture",
        "question": "Which of the following is the core component of Docker?",
        "options": {
            "A": "Docker CLI",
            "B": "Docker Engine",
            "C": "Docker Server",
            "D": "Docker Hypervisor"
        },
        "answer": "B",
        "explanation": "The Docker Engine is the core component of Docker, responsible for managing containers, images, and networks."
    },
    {
        "QN": "176",
        "type": "Docker Basics",
        "question": "Which command is used to check the version of Docker?",
        "options": {
            "A": "docker details",
            "B": "docker info",
            "C": "docker version",
            "D": "docker \u00e2\u20ac\u201cversion"
        },
        "answer": "D",
        "explanation": "The command 'docker \u00e2\u20ac\u201cversion' is used to check the version of Docker installed on your system."
    },
    {
        "QN": "177",
        "type": "Docker Basics",
        "question": "What is a Docker Container?",
        "options": {
            "A": "A network service",
            "B": "A lightweight executable package",
            "C": "An Operating System kernel",
            "D": "A Virtual Machine"
        },
        "answer": "B",
        "explanation": "A Docker container is a lightweight executable package that includes everything needed to run an application."
    },
    {
        "QN": "178",
        "type": "Docker Commands",
        "question": "What does the `docker ps` command do?",
        "options": {
            "A": "Starts a Docker container",
            "B": "Displays Docker images",
            "C": "Displays Docker version",
            "D": "Displays running containers"
        },
        "answer": "D",
        "explanation": "The 'docker ps' command is used to display a list of running containers."
    },
    {
        "QN": "179",
        "type": "Docker Images",
        "question": "Which file defines the instructions to build a Docker image?",
        "options": {
            "A": "Dockerfile",
            "B": "requirements.json",
            "C": "config.txt",
            "D": "docker-compose.yml"
        },
        "answer": "A",
        "explanation": "A Dockerfile contains instructions for building a Docker image."
    },
    {
        "QN": "180",
        "type": "Docker Images",
        "question": "What is a Docker Image?",
        "options": {
            "A": "A running container",
            "B": "A snapshot of an application and its dependencies",
            "C": "A configuration file",
            "D": "A virtual hard drive"
        },
        "answer": "B",
        "explanation": "A Docker image is a snapshot of an application and its dependencies, used to create containers."
    },
    {
        "QN": "181",
        "type": "Docker Images",
        "question": "How do you create a Docker Image?",
        "options": {
            "A": "docker run",
            "B": "docker pull",
            "C": "docker build",
            "D": "docker start"
        },
        "answer": "C",
        "explanation": "The 'docker build' command is used to create a Docker image from a Dockerfile."
    },
    {
        "QN": "182",
        "type": "Docker Images",
        "question": "How can you remove a Docker image?",
        "options": {
            "A": "docker remove",
            "B": "docker delete",
            "C": "docker rm",
            "D": "docker rmi"
        },
        "answer": "D",
        "explanation": "The 'docker rmi' command is used to remove a Docker image."
    },
    {
        "QN": "183",
        "type": "Docker vs VMs",
        "question": "What is the difference between a Docker Container and a Virtual Machine?",
        "options": {
            "A": "Containers are slower than VMs",
            "B": "VMs run on hardware, while containers do not",
            "C": "Containers share the host OS kernel, while VMs have their own kernel",
            "D": "Containers are heavier than VMs"
        },
        "answer": "C",
        "explanation": "Containers share the host OS kernel, while VMs run their own OS kernel."
    },
    {
        "QN": "184",
        "type": "Docker Commands",
        "question": "Which command creates and starts a new container?",
        "options": {
            "A": "docker create",
            "B": "docker start",
            "C": "docker run",
            "D": "docker build"
        },
        "answer": "C",
        "explanation": "The 'docker run' command creates and starts a new container from an image."
    },
    {
        "QN": "185",
        "type": "Docker Commands",
        "question": "How do you stop a running Docker container?",
        "options": {
            "A": "docker pause",
            "B": "docker terminate",
            "C": "docker end",
            "D": "docker stop"
        },
        "answer": "D",
        "explanation": "The 'docker stop' command is used to stop a running Docker container."
    },
    {
        "QN": "186",
        "type": "Docker Architecture",
        "question": "What are the key components of Docker architecture?",
        "options": {
            "A": "Docker Manager, Docker Processor, Docker Configurator",
            "B": "Docker Master, Docker Node, Docker Registry",
            "C": "Docker Engine, Docker CLI, Docker Daemon",
            "D": "Docker Kernel, Docker Service, Docker Network"
        },
        "answer": "C",
        "explanation": "The key components of Docker architecture include the Docker Engine, Docker CLI, and Docker Daemon."
    },
    {
        "QN": "187",
        "type": "Docker Architecture",
        "question": "What is the role of the Docker Daemon?",
        "options": {
            "A": "It stores operating system data",
            "B": "It manages containers, images, and networks",
            "C": "It interacts with the user interface",
            "D": "It only handles logs"
        },
        "answer": "B",
        "explanation": "The Docker Daemon manages containers, images, and networks."
    },
    {
        "QN": "188",
        "type": "Docker Registry",
        "question": "What is a Docker Registry?",
        "options": {
            "A": "A network router",
            "B": "A local storage system",
            "C": "A virtual machine host",
            "D": "A repository for storing and sharing Docker images"
        },
        "answer": "D",
        "explanation": "A Docker Registry is a repository for storing and sharing Docker images."
    },
    {
        "QN": "189",
        "type": "Docker Services",
        "question": "Which Docker service manages updates automatically?",
        "options": {
            "A": "Docker Daemon",
            "B": "Docker Compose",
            "C": "Docker Engine",
            "D": "Docker Plugin"
        },
        "answer": "A",
        "explanation": "The Docker Daemon manages updates and services automatically."
    },
    {
        "QN": "190",
        "type": "Docker Services",
        "question": "What is a Docker Service?",
        "options": {
            "A": "A process that manages logs",
            "B": "A database replication tool",
            "C": "A notification system",
            "D": "A set of containers deployed together"
        },
        "answer": "D",
        "explanation": "A Docker Service refers to a set of containers deployed together."
    },
    {
        "QN": "191",
        "type": "Docker Commands",
        "question": "What command lists all running Docker containers?",
        "options": {
            "A": "docker list",
            "B": "docker check",
            "C": "docker ps",
            "D": "docker stop"
        },
        "answer": "C",
        "explanation": "The 'docker ps' command lists all running Docker containers."
    },
    {
        "QN": "192",
        "type": "Docker Images",
        "question": "Why use Multi-stage builds in Docker?",
        "options": {
            "A": "Increase startup time",
            "B": "Decrease image size",
            "C": "Use more memory",
            "D": "None of the above"
        },
        "answer": "B",
        "explanation": "Multi-stage builds are used to decrease the size of Docker images."
    },
    {
        "QN": "193",
        "type": "Docker Commands",
        "question": "Which CLI command shows detailed information about a container?",
        "options": {
            "A": "docker inspect",
            "B": "docker show",
            "C": "docker details",
            "D": "docker info"
        },
        "answer": "A",
        "explanation": "The 'docker inspect' command provides detailed information about a container."
    },
    {
        "QN": "194",
        "type": "Docker Commands",
        "question": "What is the purpose of the docker exec command?",
        "options": {
            "A": "Execute a command inside a running container",
            "B": "Pull a new image",
            "C": "Remove a container",
            "D": "Start a new registry"
        },
        "answer": "A",
        "explanation": "The 'docker exec' command executes a command inside a running container."
    },
    {
        "QN": "195",
        "type": "Docker Commands",
        "question": "Which of the following commands removes a stopped container?",
        "options": {
            "A": "docker delete",
            "B": "docker stop",
            "C": "docker prune",
            "D": "docker rm"
        },
        "answer": "D",
        "explanation": "The 'docker rm' command removes a stopped container."
    },
    {
        "QN": "196",
        "type": "Docker Images",
        "question": "How do you tag a Docker image with a new version?",
        "options": {
            "A": "docker version",
            "B": "docker update",
            "C": "docker tag",
            "D": "docker modify"
        },
        "answer": "C",
        "explanation": "The 'docker tag' command is used to tag a Docker image with a new version."
    },
    {
        "QN": "197",
        "type": "Docker Registry",
        "question": "Which of the following is true about Docker Hub?",
        "options": {
            "A": "It is a Docker image storage and distribution platform",
            "B": "It is a cloud service for running containers",
            "C": "It is only available for Windows",
            "D": "It is a tool for managing Docker containers"
        },
        "answer": "A",
        "explanation": "Docker Hub is a Docker image storage and distribution platform."
    },
    {
        "QN": "198",
        "type": "Docker Compose",
        "question": "What is the docker-compose tool used for?",
        "options": {
            "A": "Deploying single containers",
            "B": "Deleting containers",
            "C": "Running multiple containers as a service",
            "D": "Creating local network connections"
        },
        "answer": "C",
        "explanation": "Docker Compose is used for running multiple containers as a service."
    },
    {
        "QN": "199",
        "type": "Docker Networking",
        "question": "What is the default network mode in Docker containers?",
        "options": {
            "A": "Overlay",
            "B": "Static",
            "C": "Host",
            "D": "Bridge"
        },
        "answer": "D",
        "explanation": "The default network mode in Docker containers is Bridge."
    },
    {
        "QN": "200",
        "type": "Docker Networking",
        "question": "What is the purpose of the docker network ls command?",
        "options": {
            "A": "Create a new network",
            "B": "List existing networks",
            "C": "Share network bandwidth",
            "D": "Remove existing networks"
        },
        "answer": "B",
        "explanation": "The 'docker network ls' command lists existing networks."
    },
    {
        "QN": "201",
        "type": "Docker Compose",
        "question": "What is Docker Compose used for?",
        "options": {
            "A": "Managing multi-container applications",
            "B": "Connecting network interfaces",
            "C": "Building a single container",
            "D": "Automating system tasks"
        },
        "answer": "A",
        "explanation": "Docker Compose is used for managing multi-container applications."
    },
    {
        "QN": "202",
        "type": "Docker Networking",
        "question": "What is the purpose of Docker Networking?",
        "options": {
            "A": "To deploy virtual machines",
            "B": "To increase system RAM",
            "C": "To store application data",
            "D": "To connect applications within containers"
        },
        "answer": "D",
        "explanation": "Docker Networking connects applications within containers."
    },
    {
        "QN": "203",
        "type": "Docker Compose",
        "question": "How do you bring up a service using Docker Compose?",
        "options": {
            "A": "docker-compose install",
            "B": "docker run",
            "C": "docker-compose up",
            "D": "docker-compose scale"
        },
        "answer": "C",
        "explanation": "The 'docker-compose up' command brings up a service defined in a docker-compose.yml file."
    },
    {
        "QN": "204",
        "type": "Docker Orchestration",
        "question": "What is Docker Swarm?",
        "options": {
            "A": "A logging tool",
            "B": "A storage manager",
            "C": "An orchestration tool for managing clusters",
            "D": "A backup service"
        },
        "answer": "C",
        "explanation": "Docker Swarm is an orchestration tool for managing clusters."
    },
    {
        "QN": "205",
        "type": "Docker Images",
        "question": "Which of the following is not a valid Docker image format?",
        "options": {
            "A": "iso",
            "B": "dockerfile",
            "C": "img",
            "D": "tar"
        },
        "answer": "A",
        "explanation": "ISO is not a valid Docker image format."
    },
    {
        "QN": "206",
        "type": "Docker Networking",
        "question": "What is port binding in Docker?",
        "options": {
            "A": "Binding environment variables",
            "B": "Assigning internal ports to external ones",
            "C": "Binding memory resources",
            "D": "Binding IP addresses to containers"
        },
        "answer": "B",
        "explanation": "Port binding in Docker assigns internal ports to external ones."
    },
    {
        "QN": "207",
        "type": "Docker Security",
        "question": "What best practice should you follow to secure a Docker environment?",
        "options": {
            "A": "Use docker scan for vulnerability testing",
            "B": "Minimize container dependencies",
            "C": "Limit privileges with \u00e2\u20ac\u201cprivileged",
            "D": "Run containers as root"
        },
        "answer": "A",
        "explanation": "Using 'docker scan' for vulnerability testing is a recommended security practice."
    },
    {
        "QN": "208",
        "type": "Docker Commands",
        "question": "What happens if you stop a Docker container?",
        "options": {
            "A": "The container is automatically destroyed",
            "B": "The container stops running but remains on the system",
            "C": "The container becomes permanently inaccessible",
            "D": "It deletes all container data"
        },
        "answer": "B",
        "explanation": "When you stop a Docker container, it stops running but remains on the system."
    },
    {
        "QN": "209",
        "type": "Docker Images",
        "question": "What is the purpose of a Dockerfile?",
        "options": {
            "A": "To create virtual machines",
            "B": "To optimize application code",
            "C": "To store environment variables",
            "D": "To define and build Docker images"
        },
        "answer": "D",
        "explanation": "A Dockerfile defines and builds Docker images."
    },
    {
        "QN": "210",
        "type": "Docker Volumes",
        "question": "Which command creates a Docker volume?",
        "options": {
            "A": "docker storage create",
            "B": "docker add volume",
            "C": "docker volume create",
            "D": "docker create"
        },
        "answer": "C",
        "explanation": "The 'docker volume create' command creates a Docker volume."
    },
    {
        "QN": "211",
        "type": "Docker Security",
        "question": "What is Docker Content Trust (DCT)?",
        "options": {
            "A": "A system performance monitor",
            "B": "A mechanism for local image storage",
            "C": "A debugging tool",
            "D": "A feature that verifies image authenticity"
        },
        "answer": "D",
        "explanation": "Docker Content Trust (DCT) verifies the authenticity of Docker images."
    },
    {
        "QN": "212",
        "type": "Docker Commands",
        "question": "Which command is used to view logs of a running container?",
        "options": {
            "A": "docker logs",
            "B": "docker view",
            "C": "docker show logs",
            "D": "docker trace"
        },
        "answer": "A",
        "explanation": "The 'docker logs' command is used to view logs of a running container."
    },
    {
        "QN": "213",
        "type": "Docker Commands",
        "question": "How can you interactively troubleshoot a container?",
        "options": {
            "A": "docker attach",
            "B": "docker exec",
            "C": "docker debug",
            "D": "docker trace"
        },
        "answer": "B",
        "explanation": "The 'docker exec' command allows interactive troubleshooting of a container."
    },
    {
        "QN": "214",
        "type": "Docker CI/CD",
        "question": "Why is Docker commonly integrated with CI/CD pipelines?",
        "options": {
            "A": "Consistent environments across testing and production",
            "B": "Easier dependency management",
            "C": "Faster build and deployment times",
            "D": "All of the mentioned"
        },
        "answer": "D",
        "explanation": "Docker is integrated with CI/CD pipelines for consistent environments, easier dependency management, and faster deployment."
    },
    {
        "QN": "215",
        "type": "Docker Orchestration",
        "question": "Why is Kubernetes often paired with Docker?",
        "options": {
            "A": "For debugging local machines",
            "B": "For virtualizing operating systems",
            "C": "For orchestrating large-scale container deployments",
            "D": "For building individual containers"
        },
        "answer": "C",
        "explanation": "Kubernetes is paired with Docker for orchestrating large-scale container deployments."
    },
    {
        "QN": "216",
        "type": "Docker CI/CD",
        "question": "Which tool is frequently combined with Docker for CI/CD workflows?",
        "options": {
            "A": "CircleCI",
            "B": "GitLab CI/CD",
            "C": "Jenkins",
            "D": "All of the mentioned"
        },
        "answer": "D",
        "explanation": "Tools like CircleCI, GitLab CI/CD, and Jenkins are frequently combined with Docker for CI/CD workflows."
    },
    {
        "QN": "217",
        "type": "Docker Commands",
        "question": "Which Docker command allows you to delete all unused images, containers, and networks?",
        "options": {
            "A": "docker remove-all",
            "B": "docker delete-all",
            "C": "docker prune",
            "D": "docker clean"
        },
        "answer": "C",
        "explanation": "The 'docker prune' command deletes all unused Docker resources."
    },
    {
        "QN": "218",
        "type": "Docker Compose",
        "question": "Which command starts services defined in a docker-compose.yml file?",
        "options": {
            "A": "docker-compose up",
            "B": "docker-compose build",
            "C": "docker-compose stop",
            "D": "docker-compose start"
        },
        "answer": "A",
        "explanation": "The 'docker-compose up' command starts services defined in a docker-compose.yml file."
    },
    {
        "QN": "219",
        "type": "Docker Images",
        "question": "Why should Docker images be kept small?",
        "options": {
            "A": "Reduced resource consumption",
            "B": "Faster startup time",
            "C": "Easier maintenance and updates",
            "D": "All of the mentioned"
        },
        "answer": "D",
        "explanation": "Small Docker images reduce resource consumption, improve startup times, and simplify maintenance and updates."
    }
]